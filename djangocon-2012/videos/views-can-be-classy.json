{"whiteboard": "needs editing", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "DjangoCon 2012", "speakers": ["Kenneth Love"], "title": "Views can be Classy!", "quality_notes": "", "video_flv_length": null, "recorded": "2012-09-04", "video_mp4_length": null, "description": "It seems like most people in the Django community either don't have any idea\nhow class-based views work or are scared to try them out. I want to help with\na solid introduction to the technology.\n\n  * The usual \"who I am\" bit.\n  * Most other things in Django are classes.\n  *     * models\n  *     * forms\n  *     * even templates\n  * Views should be classes, too.\n  * What view classes are provided by Django.\n  * How to create your own mixins to clean up pain points\n  * Where function-based views are still handy.\n  * Example CBVs for common use cases\n  *     * handling form input for more than one form\n  *     * serving different content based on users\n\n", "video_mp4_url": null, "tags": ["class-based-views", "django"], "copyright_text": "Creative Commons Attribution license (reuse allowed", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=yr9HOLipPXc", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "An overview of what class-based views (CBVs) are, which ones are available,\nand how to use them in your projects. I'll also cover creating mixins, where\nfunction-based views still make sense, and how to test CBVs. As part of this,\nI'll be covering my django-braces (https://crate.io/packages/django-braces/)\npackage.\n\n", "thumbnail_url": "http://i.ytimg.com/vi/yr9HOLipPXc/hqdefault.jpg", "video_flv_url": null}