{
  "id": 3158, 
  "category": "PyTexas 2014", 
  "slug": "is-your-helper-library-opinionated-enough", 
  "title": "Is your helper library opinionated enough?", 
  "summary": "", 
  "description": "It's a constant debate.\r\n\r\nHow do you build a helper library?\r\n\r\nAt one end of the spectrum we have Runscope CEO John Sheehan who thinks that helper libraries are evil and shouldn't exist at all. At the other we find helper libraries that don't look or smell anything like the API. And somewhere in the middle we have helper libraries that are so close to the API itself that they are nothing more than a thin veneer.\r\n\r\nWhich is better? Who\u2019s right? The real question to me is how idiomatic should a helper library be? Should a Django library make a Django developer feel comfortable, or should she have to read the API docs to understand how it works? Should a Python library look RESTful, or should it look like a hierarchy of classes?\r\n\r\nAt our company, we maintain two libraries. They both have advantages and disadvantages, they appeal to different developers, and sometimes even the same developer at different times.", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "CC-BY", 
  "thumbnail_url": "http://i.ytimg.com/vi/XwtAZ34H3rE/hqdefault.jpg", 
  "duration": 1500, 
  "videos": [
    {
      "url": "http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3158_Is_your_helper_library_opinionated_enough.webm", 
      "length": null, 
      "type": "webm"
    }, 
    {
      "url": "http://www.youtube.com/watch?v=XwtAZ34H3rE", 
      "length": 0, 
      "type": "youtube"
    }
  ], 
  "source_url": "http://www.youtube.com/watch?v=XwtAZ34H3rE", 
  "tags": [], 
  "speakers": [
    "Paul Murphy"
  ], 
  "recorded": "2014-10-04"
}