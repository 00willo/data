{"whiteboard": "needs editing", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "PyCon AU 2015", "speakers": ["Peter Lovett"], "title": "On Being Pythonic", "quality_notes": "", "video_flv_length": null, "recorded": "2015-08-04", "video_mp4_length": null, "description": "Design Patterns, standard designs and idioms in Python\r\n\r\nPythonic (Noun): Uses Python idioms well, that it is natural or shows fluency in the language.\r\n\r\nEven though you\u2019re using Python syntax and keywords, your code still smells like C, Java or Perl. Or just feels like it's not the best way. This tour of Python is about changing the way you think, and to write Python that makes the best use of the language. As a result, your Python will be cleaner, simpler, nicer, and be more readable.\r\n\r\nEven though you know the syntax to make a class and inherit, you don't know when you should. Composition? IsA, HasA, IsLikeA? What about factories, singletons, iterators and adapters?\r\n\r\nMashing together a long and painful background of C, C++, Perl and Java coding, a mind-expanding trip down the Elements of Reusable Object-Oriented Software rabbit hole, and over 30 years programming experience, Peter brings some clarity, reason and ideas on Pythonic idioms and OO design as implemented in Python.\n\n", "video_mp4_url": null, "tags": [], "copyright_text": "creativeCommon", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=R4AeB85gEeU", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "", "thumbnail_url": "https://i.ytimg.com/vi/R4AeB85gEeU/hqdefault.jpg", "video_flv_url": null}