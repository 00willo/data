{
  "id": 4004,
  "category": "PyCon AU 2015",
  "slug": "fang-pythonic-dependency-injection",
  "title": "Fang: Pythonic dependency injection",
  "alias": "video/4004/fang-pythonic-dependency-injection",
  "summary": "",
  "description": "Dependency injection (DI) is a technique most often used in \"big OO\"\nlanguages like Java and C#. It's usually dismissed by Python developers\nas only needed because of these other languages' deficiencies: static\ntyping, restrictive object systems, lack of reflection, etc.\n\nHowever, there are other dynamically-typed languages which do use forms\nof dependency injection. From looking at these systems, we can see there\nare some advantages to dependency injection *even if* you're not using a\ntraditional \"big OO\" language with static types and interfaces.\nDependency-injected code can be more modular, much easier to test,\neasier to analyse, and easier to modify or extend to meet new\nrequirements.\n\nDespite this, there aren't many dependency-injection systems for Python.\nThe few that do exist aren't \"Pythonic\", or implement DI in ways that\ncompromise a lot of its benefits.\n\nFang is a library which adds dependency injection to Python in a way\nwhich provides real benefits for code clarity, ease of testing, and\nmaintainability, while still fitting naturally into Python's idioms.\nFang describes dependencies concisely but explicitly, and doesn't\nrestrict the developer to a particular paradigm on how dependencies are\nvalidated or met.\n\nThis talk will give a brief overview of how DI is used across a few\nlanguages (both traditional OO and dynamic languages) and highlight what\nelements of DI can be beneficial in Python. The talk will then demo how\nFang can be used to add DI to Python code, and show some of the benefits\nto code clarity, unit testing and code analysis.\n",
  "quality_notes": "",
  "language": "English",
  "copyright_text": "creativeCommon",
  "thumbnail_url": "https://i.ytimg.com/vi/zqRd941NXlI/hqdefault.jpg",
  "duration": null,
  "videos": [
    {
      "url": "https://www.youtube.com/watch?v=zqRd941NXlI",
      "type": "youtube",
      "length": 0
    }
  ],
  "source_url": "https://www.youtube.com/watch?v=zqRd941NXlI",
  "tags": [],
  "speakers": [
    "Nathan Craike"
  ],
  "recorded": "2015-08-04"
}