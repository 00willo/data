{
  "id": 1314, 
  "category": "EuroPython 2012", 
  "slug": "method-restrictions-abstract-final-override-e", 
  "title": "Method restrictions (abstract, final, @override etc.) and implementing them for Python", 
  "summary": "[EuroPython 2012] P Szabo - 3 JULY 2012 in \"Track Tagliatelle\"\n\n", 
  "description": "The earlier a bug is discovered, the cheaper it is to fix it. Method\nrestrictions (such as abstract, final and @Override) help the programmer in\ndiscovering incompatibilities between a class and its subclass early (i.e. at\nstartup time for Python and at compile time for compiled languages). Python\ndoesn\u2019t provide method restrictions out of the box. To implement them, we take\na deep dive to the realms of Python metaprogramming (decorators, metaclasses,\nmethod wrappers, traceback inspection and builtins). Lots of short and code\nexamples will be provided to show the building blocks and how we combine them.\nSlides: [http://pts-mini-gpl.googlecode.com/svn/trunk/pobjects/ptsmethodrestri\nctions_2012-07-03.html](http://pts-mini-\ngpl.googlecode.com/svn/trunk/pobjects/ptsmethodrestrictions_2012-07-03.html)\nSource code download: [http://code.google.com/p/pts-mini-\ngpl/source/browse/#svn/trunk/pobjects](http://code.google.com/p/pts-mini-\ngpl/source/browse/#svn/trunk/pobjects)\n\n", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "Standard YouTube License", 
  "thumbnail_url": "http://i.ytimg.com/vi/WX7aB0e4-Lk/hqdefault.jpg", 
  "duration": null, 
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=WX7aB0e4-Lk", 
      "length": 0, 
      "type": "youtube"
    }
  ], 
  "source_url": "http://www.youtube.com/watch?v=WX7aB0e4-Lk", 
  "tags": [], 
  "speakers": [
    "P Szabo"
  ], 
  "recorded": "2012-07-04"
}