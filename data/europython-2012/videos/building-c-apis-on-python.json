{
  "id": 1297,
  "category": "EuroPython 2012",
  "slug": "building-c-apis-on-python",
  "title": "Building C++ APIs on Python",
  "alias": "video/1297/building-c-apis-on-python",
  "summary": "[EuroPython 2012] A Bingham - 4 JULY 2012 in \"Track Ravioli\"\n",
  "description": "Python has great support for interfacing with C/C++ code, and this has\nbeen used to great advantage by exposing many C/C++ libraries as Python\nmodules. In this talk, I will reverse the equation. I will show you how\nyou can - and why you might want to - build C++ APIs on top of Python\nmodules and use them directly from your C++ programs. The topics will\ninclude: Conversion of types across the language boundary.\nImplementation of C++ idioms (e.g. the begin()/end() iterator API) on\ntop of Python idioms. Python runtime management: initialization, module\nloading, etc. Working with the \u201cimpedance mismatches\u201d between the\nlanguages (e.g. duck-typing vs. static typing) I will also discuss the\nreasons why C++ APIs on Python code represent a very useful and often\npowerful technique. The reasons range from simple pragmatism (you want\nto use an existing Python module in an existing C++ program) to\nproductivity (writing Python code plus a C++ wrapper can be easier and\nfaster than writing pure C++.) link -\n`https://docs.google.com/presentation/d /1hx\\_59DMQm6ZlI3Jz-LX-\nDZ4m5LVLpGcSlk1Dq1PiELI/edit <https://docs.google.com/presentation/d%20/1hx_59DMQm6ZlI3Jz-LX-DZ4m5LVLpGcSlk1Dq1PiELI/edit>`__\n",
  "quality_notes": "",
  "language": "English",
  "copyright_text": "Standard YouTube License",
  "thumbnail_url": "http://i.ytimg.com/vi/i5YwerH73EY/hqdefault.jpg",
  "duration": null,
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=i5YwerH73EY",
      "type": "youtube",
      "length": 0
    }
  ],
  "source_url": "http://www.youtube.com/watch?v=i5YwerH73EY",
  "tags": [],
  "speakers": [
    "A Bingham"
  ],
  "recorded": "2012-07-05"
}