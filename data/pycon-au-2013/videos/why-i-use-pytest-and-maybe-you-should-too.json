{"whiteboard": "", "video_mp4_download_only": true, "video_webm_download_only": false, "duration": 30, "video_ogv_download_only": false, "category": "PyCon AU 2013", "speakers": ["Andy Todd"], "title": "Why I use py.test and maybe you should too", "quality_notes": "", "video_flv_length": null, "recorded": "2013-07-06", "video_mp4_length": null, "description": "", "video_mp4_url": "http://s3.us.archive.org/ndvpyconau2013/Why_I_use_pytest_and_maybe_you.mp4", "tags": [], "copyright_text": "CC-BY-SA", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=P-AhpukDIik", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "Have you tried unit testing? Always meant to add tests to your project but didn't know where to start? This presentation will provide a gentle introduction to unit testing your module, package or entire project.\r\n\r\nThe standard library comes with the unit test module but a great alternative is py.test. Py.test makes starting to test your project as easy as possible. When you need them it has a full set of tools and testing capabilities. \r\n\r\nThis presentation will provide an overview of unit testing and then show how easy it is to get started using py.test.", "thumbnail_url": "http://i1.ytimg.com/vi/P-AhpukDIik/hqdefault.jpg", "video_flv_url": null}