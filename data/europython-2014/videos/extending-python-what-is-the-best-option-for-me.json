{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "EuroPython 2014", "speakers": ["Francisco Fern\u00e1ndez Casta\u00f1o"], "title": "Extending Python, what is the best option for me?", "quality_notes": "", "video_flv_length": null, "recorded": "2014-07-22", "video_mp4_length": null, "description": "In this talk we will explore all the alternatives in cpython ecosystem to load external libraries. In first place we'll study the principles and how shared libraries work. After that we will look into the internals of CPython to understand how extensions work and how modules are loaded. Then we will study the main three alternatives to extend CPython: Native Extensions, Ctypes and CFFI and how to automate the process. \r\nFurthermore we will take a look to other python implementations and how we can extend it.", "video_mp4_url": "", "tags": [], "copyright_text": "http://creativecommons.org/licenses/by/3.0/", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=m5H2JYSXrHc", "video_webm_url": "", "video_ogv_length": null, "video_ogv_url": "", "language": "English", "video_webm_length": null, "summary": "Python is a great language, but there are occasions where we need access to low level operations or connect with some database driver written in C. With the FFI(Foreign function interface) we can connect Python with other languages like C, C++ and even the new Rust. There are some alternatives to achieve this goal, Native Extensions, Ctypes and CFFI.  I'll compare this three ways of extending Python.", "thumbnail_url": "http://i.ytimg.com/vi/m5H2JYSXrHc/hqdefault.jpg", "video_flv_url": ""}