{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "EuroPython 2014", "speakers": ["Konark Modi"], "title": "Design considerations while Evaluating, Developing, Deploying a distributed task processing system", "quality_notes": "", "video_flv_length": null, "recorded": "2014-07-23", "video_mp4_length": null, "description": "", "video_mp4_url": "", "tags": [], "copyright_text": "http://creativecommons.org/licenses/by/3.0/", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=zdk3IoLnjMg", "video_webm_url": "", "video_ogv_length": null, "video_ogv_url": "", "language": "English", "video_webm_length": null, "summary": "With the growing world of web, there are numerous use-cases which require tasks to be executed in an asynchronous manner and in a distributed fashion. \r\nCelery is one of the most robust, scalable, extendable and easy-to-implement frameworks available for distributed task processing. While developing applications using Celery, I have had considerable experience in terms of what design choices one should be aware of while evaluating an existing system or developing one's own system from scratch.", "thumbnail_url": "http://i.ytimg.com/vi/zdk3IoLnjMg/hqdefault.jpg", "video_flv_url": ""}