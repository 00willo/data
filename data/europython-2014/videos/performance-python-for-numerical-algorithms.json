{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "EuroPython 2014", "speakers": ["Yves Hilpisch"], "title": "Performance Python for Numerical Algorithms", "quality_notes": "", "video_flv_length": null, "recorded": "2014-07-23", "video_mp4_length": null, "description": "This talk is about several approaches to implement high performing numerical algorithms and applications in Python. It introduces into approaches like multi-threading, parallelization (CPU/GPU), dynamic compiling, high throughput IO operations.\r\n\r\nThe approach is a practical one in that every approach is illustrated by specific Python examples.\r\n\r\nThe talk uses, among others, the following libraries:\r\n\r\n* NumPy\r\n* numexpr\r\n* IPython.Parallel\r\n* Numba\r\n* NumbaPro\r\n* PyTables", "video_mp4_url": "", "tags": [], "copyright_text": "http://creativecommons.org/licenses/by/3.0/", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=BkaIUvM5GXo", "video_webm_url": "", "video_ogv_length": null, "video_ogv_url": "", "language": "English", "video_webm_length": null, "summary": "This talk is about several approaches to implement high performing numerical algorithms and applications in Python. It introduces into approaches like vectorization, multi-threading, parallelization (CPU/GPU), dynamic compiling, high throughput IO operations. The approach is a practical one in that every approach is illustrated by specific Python examples.", "thumbnail_url": "http://i.ytimg.com/vi/BkaIUvM5GXo/hqdefault.jpg", "video_flv_url": ""}