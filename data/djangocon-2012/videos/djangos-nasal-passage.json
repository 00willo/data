{"whiteboard": "needs editing", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "DjangoCon 2012", "speakers": ["Erik Rose"], "title": "Django's Nasal Passage", "quality_notes": "", "video_flv_length": null, "recorded": "2012-09-06", "video_mp4_length": null, "description": "  * Why nose?\n    * Pain points with standard Django testing\n    * Extensibility without writing custom, uncombineable testrunner subclasses\n    * Rich ecosystem of helpful plugins\n  * django-nose\n    * Testing just your apps, not all the random installed stuff\n    * Test-selection tricks: running just failed tests, running a module, etc.\n    * Killing the boilerplate:\n      * No more imports into **init**\n      * No more class name collisions and accidental shadowing\n      * With all this freedom, how best should you organize your tests?\n    * Going 4 times faster with fixture bundling\n      * Troubleshooting\n      * Fixtures are evil\n      * Where do I put the factories?\n    * Speeding startup with test DB reuse\n    * Writing faster TransactionTestCases with hygienic base classes\n      * Background on Django's handling of TransactionTestCases\n      * How to improve matters\n    * Test-only models: what's the best practice?\n  * nose-progressive\n    * Dots considered harmful. When will my tests be done?\n    * Patience is for the dead. Show me my tracebacks as they happen!\n    * My terminal is only this big. Don't waste my space.\n    * Hiding pointless stack frames\n    * Editor round-tripping for quick debugging\n  * Splitting into sub-suites\n    * An introduction to the attr plugin\n    * Have some run only on CI machines, some constantly, others before checkin\n    * Choosing tests with regexes\n  * Other fun plugins\n    * f7u12, for when your tests get angry\n    * Coverage\n    * xunit, for your continual integration pleasure\n    * Profiling\n\n", "video_mp4_url": null, "tags": ["django", "nose", "testing"], "copyright_text": "Creative Commons Attribution license (reuse allowed", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=NZnnB7l3ZHM", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "Django's testrunner gets you started quickly, but you soon hit your head on\nits limitations as your project grows. By trading it for nose, a testing\nframework popular in the wider Python community, we can reduce boilerplate,\nboost performance, and improve testing UI, with only a few lines of setting\nchanges. Re-use your test DBs, integrate with Jenkins, split your suite into\npieces, and more.\n\n", "thumbnail_url": "http://i.ytimg.com/vi/NZnnB7l3ZHM/hqdefault.jpg", "video_flv_url": null}