{
  "id": 1087, 
  "category": "EuroPython 2011", 
  "slug": "writing-books-using-python-open-source-software", 
  "title": "Writing Books using Python & Open Source Software", 
  "summary": "[EuroPython 2011] wesley chun - 20 June 2011 in \"Track Ravioli\"\n\n", 
  "description": "All of us are familiar with using open source tools to develop software\napplications with, but instead of writing code, it is also possible to create\nthe manuscript of a book in very much the same way. These days, authors have\nmany choices in terms of the tools which are available to aid them in writing\na book. Gone are the times when the only option is using a proprietary word\nprocessor, so why not try it using open source tools? It's especially\nattractive to those who develop software using open source tools as well those\nwho are writing books about open source tools. Both code and the written word\nare created in plain text files. These files are easily archived using some\nversion control system. They can be shared easily via e-mail and can also be\nbacked up in the same manner. In the end, the final product is shipped to the\ncustomer: in the case of software, it's distribution via CD or DVD, or perhaps\na release for installation on a server, and for a book, it's delivering a\nmanuscript to the publisher, perhaps in a format such as HTML or PDF\u00ae.\n\nUpon some reflection, writing a book is, in many ways, similar to writing an\napplication: you create text or code which is saved to a file (or files-\ntypically one but could be more) file in some format, proprietary or\notherwise. Additions, changes, or deletions are made to the file(s), which is\nthen updated when the file is (re)saved. Backups need to be made, some\nversioning may be required to keep track of multiple files during the course\nof development, and finally, the resulting file(s) have to be delivered, as\ndescribed above. Because of all the similarities described, we assert that it\nis possible to use a development environment utilizing Python and other open\nsource tools to not only write application with, but also be able to create\nthe entire manuscript for a book as well! While this entire concept should not\nreally be mind-blowing, it does represent a trend seemingly growing in\npopularity in the open source world.\n\nIn particular, we highlight the following requirements that are necessary when\ncreating a manuscript, especially with co-authors:\n\n  * Text Formatting\n  * Editing\n  * Versioning and Backups\n  * Automated Testing of Code\n  * HTML/PDF\u00ae Generation\n  * Author Communication\n\nIn this talk, we highlight one particular case study, the development of\nAddison Wesley's 2009 publication, \"Python Web Development with Django\", as\nwell as provide some insight into other projects created using similar tools.\nOpen source software has radically affected how applications are built today,\nand this phenomenon has the ability to affect the book publishing world in the\nsame way.\n\n", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "Standard YouTube License", 
  "thumbnail_url": "http://i.ytimg.com/vi/1QTMeb9m_lE/hqdefault.jpg", 
  "duration": null, 
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=1QTMeb9m_lE", 
      "length": 0, 
      "type": "youtube"
    }
  ], 
  "source_url": "http://www.youtube.com/watch?v=1QTMeb9m_lE", 
  "tags": [
    "cd", 
    "html", 
    "testing", 
    "web"
  ], 
  "speakers": [
    "wesley chun"
  ], 
  "recorded": "2011-07-13"
}