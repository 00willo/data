{
  "id": 1156,
  "category": "EuroPython 2011",
  "slug": "dependency-injection-is-your-friend",
  "title": "Dependency injection is your friend",
  "summary": "[EuroPython 2011] Alan Franzoni - 24 June 2011 in \"Track Spaghetti\"\n",
  "description": "Dependency injection is a technique that has been around since long, and\nit's widely used in many programming languages and environments, but\nit's not that widespread in the Python world.\n\nMany think that using dependency injection will force writing large-and-\ncomplex xml blobs, break encapsulation, or reduce code readability, or\njust that it's unneeded in an highly expressive language like Python is.\n\nOn the contrary, I'll show you that DI: - doesn't require any library or\nframework; - encourages peer role identification; - helps keeping a\nclass focused and cohesive; - encourages separation between wiring from\napplicative code; - makes your code more reusable, expressive and\ntestable; - doesn't break encapsulation; - turns part of your coding\nefforts into configuration\n\nLarge applications, by the way, might just get a great maintenance boost\nby using a real DI container, hence I'll briefly cover Pydenji, the\nPython(ic) dependency injection toolkit, and what it can do for your\napplication.\n\nA basic knowledge of object oriented design and SOLID principles is\nrequired in order to fully appreciate the content of this talk.\n",
  "quality_notes": "",
  "language": "English",
  "copyright_text": "Standard YouTube License",
  "thumbnail_url": "http://i.ytimg.com/vi/PSeSWINJ5YM/hqdefault.jpg",
  "duration": null,
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=PSeSWINJ5YM",
      "type": "youtube",
      "length": 0
    }
  ],
  "source_url": "http://www.youtube.com/watch?v=PSeSWINJ5YM",
  "tags": [
    "design",
    "maintenance",
    "xml"
  ],
  "speakers": [
    "Alan Franzoni"
  ],
  "recorded": "2011-07-07"
}