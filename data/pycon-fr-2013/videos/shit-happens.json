{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": 2166, "video_ogv_download_only": false, "category": "PyCon FR 2013", "speakers": ["Olivier Hervieu"], "title": "Shit happens...", "quality_notes": "", "video_flv_length": null, "recorded": "2013-11-30", "video_mp4_length": null, "description": "", "video_mp4_url": null, "tags": [], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=5xJEKKaYJvs", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "French", "video_webm_length": null, "summary": "Les erreurs sont le cauchemar des d\u00e9veloppeurs. En parler d\u00e9clenche des discussion passionn\u00e9es (et avouons-le, souvent des trolls) et m\u00eame si les premiers langages de programmation ont d\u00e9sormais plus de 60 ans, personne ne peut dire qu'elle est la meilleure mani\u00e8re de g\u00e9rer ces &#@!& d'erreurs. Codes de retour, exceptions, monads, ..., je donnerai un aper\u00e7u des diff\u00e9rents outils qu'ont des langages comme C/Python/Ruby/Haskell/Go pour g\u00e9rer les erreurs. La plupart des concepts d\u00e9montr\u00e9s seront applicables \u00e0 d'autres langages que Python (m\u00eame si les exemples de code seront majoritairement \u00e9crits en python).\n\nNe r\u00eavez pas, je n'aurai pas corrig\u00e9 vos erreurs \u00e0 l'issue de cette pr\u00e9sentation, mais vous aurez une meilleure id\u00e9e de comment les dresser.", "thumbnail_url": "https://i.ytimg.com/vi/5xJEKKaYJvs/maxresdefault.jpg", "video_flv_url": null}