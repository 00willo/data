{
  "id": 275, 
  "category": "PyCon US 2010", 
  "slug": "pycon-2010--powerful-pythonic-patterns---186", 
  "title": "Powerful Pythonic Patterns (#186)", 
  "summary": "", 
  "description": "Powerful Pythonic Patterns video\n\nPresented by Alex Martelli\n\nAn extremely misguided meme is going around: that Python doesn't have, or\nneed, any Design Patterns. Maybe the meme springs from not realizing what the\nGang Of Four state so plainly in their historical \"Design Patterns\" book:\nwhich design patterns are useful DOES depend on the programming language one\ntargets -- design is NOT independent of implementation, as the epic-fail\n\"Waterfall\" Methodology Pattern would suggest. If you examine a \"classic DP\"\nthat's basically a workaround for some other language's lack of garbage\ncollection, or for a clumsy static-typing system, it may indeed be worthless\nfor Python. But many other DPs are still perfectly useful and applicable, and\nindeed Python's strengths as a language afford riffing on them to develop\nhighly Pythonic, powerful, productive variants.\n\nIn this talk, I analyze some of my favorite pattern families -- e.g., Template\nMethod and its variants, Dependency Injection and its ilk, Callback and\nfriends -- in a highly Pythonic context. Non-pattern Idioms, and Patterns that\naren't really Design Patterns but rather Architecture or Methodology ones,\nalso make cameo appearances.\n\n", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0", 
  "thumbnail_url": "http://a.images.blip.tv/Pycon-PyCon2010PowerfulPythonicPatterns186111-668.jpg", 
  "duration": null, 
  "videos": [
    {
      "url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2010/275_powerful-pythonic-patterns-186.m4v", 
      "length": null, 
      "type": "mp4"
    }, 
    {
      "url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2010/275_powerful-pythonic-patterns-186.ogv", 
      "length": null, 
      "type": "ogv"
    }
  ], 
  "source_url": "", 
  "tags": [
    "designpatterns", 
    "pycon", 
    "pycon2010", 
    "python-advanced"
  ], 
  "speakers": [
    "Alex Martelli"
  ], 
  "recorded": "2010-02-19"
}