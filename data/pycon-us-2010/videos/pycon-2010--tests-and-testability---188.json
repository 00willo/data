{
  "id": 310, 
  "category": "PyCon US 2010", 
  "slug": "pycon-2010--tests-and-testability---188", 
  "title": "Tests and Testability (#188)", 
  "summary": "", 
  "description": "Tests and Testability\n\n  \nPresented by Ned Batchelder\n\n  \nTesting software is difficult. Large complex systems don't lend themselves\nnaturally to automated testing. This isn't just because they are large, it's\nbecause developers often don't consider how testable their code is.\nTestability is as important as all the other -ilities in your code\n(portability, maintainability, efficiency, etc).\n\n  \nTestability is a characteristic of your code that makes it easier to test.\nIncreased testability can give you better tests, but it also gives you just\nplain better code. Improving testability generally means considering the\ninterfaces to your internal modules and improving them to provide better\nmodularity. This improvement often has benefits in your product code.\n\n  \nI'll discuss specific examples to demonstrate how code can be made more\ntestable. Mocks, dependency injection, and crisp API design are just a few of\nthe techniques that can improve your code's testability and make you a happier\nperson.\n\n", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0", 
  "thumbnail_url": "http://a.images.blip.tv/Pycon-PyCon2010TestsAndTestability188726.png", 
  "duration": null, 
  "videos": [
    {
      "url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2010/310_tests-and-testability-188.m4v", 
      "length": null, 
      "type": "mp4"
    }, 
    {
      "url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2010/310_tests-and-testability-188.ogv", 
      "length": 163421188, 
      "type": "ogv"
    }
  ], 
  "source_url": "", 
  "tags": [
    "pycon", 
    "pycon2010", 
    "testing"
  ], 
  "speakers": [
    "Ned Batchelder"
  ], 
  "recorded": "2010-02-19"
}