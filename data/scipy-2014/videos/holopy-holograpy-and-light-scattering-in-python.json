{
  "id": 2765, 
  "category": "SciPy 2014", 
  "slug": "holopy-holograpy-and-light-scattering-in-python", 
  "title": "HoloPy: Holograpy and Light Scattering in Python", 
  "summary": "Digital holography microscopy is a powerful tool for fast 3D imaging of soft matter systems. However, making measurements from holograms requires special computation. HoloPy is a set of tools for reconstructing and fitting to holograms. It also includes tools for computing light scattering, setting up inverse problems, and working with images and metadata.", 
  "description": "Digital holographic microscopy is fast and powerful tool for 3D imaging.\r\nHolography captures information about a 3D scene onto a 2D camera using\r\ninterference. This means that the speed of holographic imaging is limited only\r\nby camera speed, making holography an ideal tool for studying fast processes in\r\nsoft matter systems. However, making use of this encoded information requires\r\nsignificant computational post processing. We have developed and released\r\n[HoloPy](http://manoharan.seas.harvard.edu/holopy/), a python based tool for\r\ndoing these calculations. \r\n\r\nThe traditional method for extracting\r\ninformation from holograms is to optically reconstruct by shining light through\r\na hologram to obtain an image of the recorded scene. HoloPy implements the\r\ndigital equivalent of this, numerical reconstruction, in the form of light\r\npropagation by convolution. This is a fast technique based on fast Fourier\r\ntransforms, which effectively allows refocusing a holographic image after it is\r\ntaken. \r\n\r\nFor systems where a detailed scattering model is available, Lee\r\nand coworkers showed that it is possible to make more precise measurements by\r\nfitting a scattering model to a recorded hologram\r\n[[1](http://physics.nyu.edu/grierlab/index12c/)]. We have extended this\r\ntechnique to clusters of spheres\r\n[[2](http://arxiv.org/pdf/1202.1600)][[3](http://people.seas.harvard.edu/~vnm/pdf/Perry-Faraday_Discussions-2012.pdf)]\r\nand to non-spherical particles [[4](http://arxiv.org/pdf/1310.4517)]. HoloPy\r\nimplements all of these fitting techniques such that they can be used with a\r\nfew lines of python code. HoloPy also exposes an interface to all of its\r\nscattering models compute light scattering of microscopic particles or clusters\r\nof particles for other purposes. \r\n\r\nHoloPy is open source (GPLv3) and is\r\nhosted on [launchpad](https://launchpad.net/holopy). HoloPy uses Numpy for most\r\nof its manipulations, though it calls out to Fortran and\r\n[C](http://code.google.com/p/a-dda) codes to compute light scattering. HoloPy\r\nalso includes matplotlib and mayavi based tools for visualizing holograms and\r\nparticles. \r\n\r\n[1] Lee et.al., Optics Express, Vol. 15, Issue 26, pp.\r\n18275-18282 (2007)\r\n\r\n[2] Fung et. al., JQSRT, Vol 113, Issue 18, pp.\r\n2482-2489 (2012)\r\n\r\n[3] Perry et. al., Faraday Discussions, Vol 159, pp.\r\n211-234 (2012)\r\n\r\n[4] Wang et. al. JQSRT, (2014)\r\n", 
  "quality_notes": "", 
  "language": "English", 
  "copyright_text": "http://www.youtube.com/t/terms", 
  "thumbnail_url": "http://i1.ytimg.com/vi/uW6bMEcFX4A/hqdefault.jpg", 
  "duration": null, 
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=uW6bMEcFX4A", 
      "length": 0, 
      "type": "youtube"
    }
  ], 
  "source_url": "http://www.youtube.com/watch?v=uW6bMEcFX4A", 
  "tags": [
    "holopy"
  ], 
  "speakers": [
    "Tom Dimiduk"
  ], 
  "recorded": "2014-07-14"
}