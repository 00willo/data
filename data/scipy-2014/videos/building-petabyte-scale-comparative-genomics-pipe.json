{
  "id": 2818,
  "category": "SciPy 2014",
  "slug": "building-petabyte-scale-comparative-genomics-pipe",
  "title": "Building petabyte-scale comparative genomics pipelines",
  "summary": "This talk will educate the audience about Python tools and best\npractices for creating reproducible petabyte-scale pipelines. This is\ndone within the context of demonstrating a new grammar-based approach to\ncomparative genomics. The genome grammars are produced using public data\nfrom the National Institutes of Health, streamed over a high-throughput\nInternet2 connection to Amazon Web Services.\n",
  "description": "We introduce a high-performance, open-source application written in\nPython that models genomic data with a context-free grammar (CFG), a\nconstruct from formal language theory. This approach is intended to\nadvance fundamental science by delivering a more extensive model of the\ngenetic interaction of diseases. Current comparative models treat\ngenomic sequences as strings, and recent advances are little more than\noptimizations of the \"grep approach\". However a genome is a grammar: it\nis parsed, follows rules, and has an inherent hierarchical structure.\nUnderstanding the structure and rules of this implied grammar are\nessential for mapping loci to diseases when those loci are distributed\nacross genomic regions.\n\nTo produce the CFGs, we have implemented the Sequitur algorithm to run\non the AWS Elastic MapReduce platform. This application is written in\nPython and uses the following packages: MRjob, boto, and pandas. This is\na petascale computing pipeline that is successful because it uses\ninherently scalable services and is able to take advantage of the 100G\nInternet2 connection between Amazon Web Services and the National\nInstitutes of Health (NIH). This architecture delivers unprecedented\ntransfer speeds and relatively low latency.\n\nWe discuss the advantages of this architecture, especially for groups\nwithout comparable local resources. In reviewing the results of our\ncomputation, we not only look at methods to measure the utility of our\nCFG models, but also the computational advantages of this approach. Just\nlike the fastest alignment algorithms, this complex approach still\noperates within linear-space. In addition, future pairwise comparisons\nare faster because our CFGs act as a compressed representation of the\nraw sequence data. Our hope is that this CFG approach is further tested\nas a replacement for raw sequence analysis. In addition, we hope that\nour bioinformatics pipeline serves as an example for the SciPy community\non how to perform large computations across the many petabytes made\navailable by NIH.\n",
  "quality_notes": "",
  "language": "English",
  "copyright_text": "http://www.youtube.com/t/terms",
  "thumbnail_url": "http://i1.ytimg.com/vi/g_QVAp1YkRI/hqdefault.jpg",
  "duration": null,
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=g_QVAp1YkRI",
      "type": "youtube",
      "length": 0
    }
  ],
  "source_url": "http://www.youtube.com/watch?v=g_QVAp1YkRI",
  "tags": [],
  "speakers": [
    "Chris Cope"
  ],
  "recorded": "2014-07-10"
}