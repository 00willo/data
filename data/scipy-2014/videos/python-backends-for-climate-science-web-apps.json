{
  "id": 2722,
  "category": "SciPy 2014",
  "slug": "python-backends-for-climate-science-web-apps",
  "title": "Python Backends for Climate Science Web Apps",
  "summary": "We present two web applications: (PICT: Past Interpretation of Climate\nTool), a paleo-climates reconstruction tool and CLIDESC, a climate\nservices layer built on top of the Clide database, a database system\nused widely in the National Meteorological services across the Pacific.\nBoth these tools have been developed at NIWA in New Zealand.\n",
  "description": "NIWA has developed two tools dedicated respectively to the\nreconstruction of the climates of the past and to the rapid and flexible\ndevelopment of climate services connected to a widely used\nmeteorological database.\n\n**PICT (Past Interpretation of Climate Tool** allows the user, given a\nclimate proxy or set of proxies, to reconstruct likely anomalies\nassociated with specific proxy epochs. The tool implements the concept\nof climate analogs, and reconstruct paleo-climate anomalies in terms of\nmean atmospheric circulation and sea-surface-temperatures, as well as in\nterms of the possible changes in the probabilities of synoptic weather\nregimes (or 'attractors' in the climate system). The whole backend of\nthis application has been exclusively developed using Python with Numpy,\nscipy, pandas and matplotlib scientific libraries. We present a brief\noverview of the underlying science before exposing the choices made in\ndesigning the python-based compute and data visualisation layer.\n\n**Clidesc** is an application layer, running in the browser, built on\ntop of **CLIDE**, an open-source database specialized in handling\nmeteorological data in real-time and facilitating its long-term storage.\nIt has been developed using open standards, and facilitate the rapid\ndevelopment of climate services (data analysis and visualisations\ndeveloped to increase climate intelligence and early warning systems).\nClidesc is currently being deployed in several Pacific Islands National\nMeteorological services. Services can be developed using either R or\nPython. Development in Python is based on Anaconda and psycopg2, which\nprovides the interface with the postgresql-based Clide database. We\npresent the context and rationale for using open-standards, and give\nexamples of how a user with minimum python knowledge can use templates\nto rapidly implement a new service tailored to her needs.\n",
  "quality_notes": "",
  "language": "English",
  "copyright_text": "http://www.youtube.com/t/terms",
  "thumbnail_url": "http://i1.ytimg.com/vi/yqMqTr3LB7o/hqdefault.jpg",
  "duration": null,
  "videos": [
    {
      "url": "http://www.youtube.com/watch?v=yqMqTr3LB7o",
      "type": "youtube",
      "length": 0
    }
  ],
  "source_url": "http://www.youtube.com/watch?v=yqMqTr3LB7o",
  "tags": [
    "climate"
  ],
  "speakers": [
    "Nicolas Fauchereau"
  ],
  "recorded": "2014-07-09"
}