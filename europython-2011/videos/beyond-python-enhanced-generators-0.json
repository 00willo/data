{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "EuroPython 2011", "speakers": ["Erik Groeneveld"], "title": "Beyond Python Enhanced Generators", "quality_notes": "", "video_flv_length": null, "recorded": "2011-07-07", "video_mp4_length": null, "description": "Right after the introduction of PEP342 (Enhanced Generators) we started to\ndecompose programs into generators. It was soon discovered that for real-life\nproblems one would need something like \"yield from\", as is described in\nPEP380. At that time, we already had a similar solution called\n'[compose](http://weightless.io/compose)', which we adapted to PEP380.\n\nAfter 5 years working with 'compose', we found a small set of other features\nthat are essential if you want to use Enhanced Generators not only as a way of\nlightweight command scheduling, but also a a pipe-line, or parser. Indeed, the\nlatter concepts are what real co-routines are about.\n\nThis talk introduces what is needed on top of PEPs 342 and 380 based on\nexperience with decomposing big enterprise search engines into co-routines.\nParts of it have been presented on SPA (2008) and EuroPython (2010).\nUnderstanding of Enhanced Generators is a prerequisite.\n\nExperience has shown that the topic is subtle enough to require quite some\ntime for full understanding, hence the suggestion for a 90 min slot.\n\n", "video_mp4_url": null, "tags": ["generators", "search"], "copyright_text": "Standard YouTube License", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=Sd4W0DhJ29A", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "[EuroPython 2011] Erik Groeneveld - 23 June 2011 in \"Track Spaghetti\"\n\n", "thumbnail_url": "http://i.ytimg.com/vi/Sd4W0DhJ29A/hqdefault.jpg", "video_flv_url": null}