{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "EuroPython 2011", "speakers": ["Enrico Franchi"], "title": "Interoperability: from Python to Clojure and the other way round", "quality_notes": "", "video_flv_length": null, "recorded": "2011-07-13", "video_mp4_length": null, "description": "Clojure is a modern Lisp dialect symbiotic with the Java Virtual Machine and\ndesigned for concurrency. Clojure is compiled to byte-code and yet is fully\ndynamic. It is very oriented towards functional programming and manages state\nchange in a controlled environment with software transactional memory (STM).\nSince Clojure is a Lisp dialect, it retains the code-as-data philosophy and\nhas a powerful macro system\n\nUsing the Jython, an implementation of the Python programming language written\nin Java, it is possible to call Clojure from Python and call Python from\nClojure, using the JVM as an interoperability platform.\n\nAfter a brief introduction of the main Clojure features, the presentation will\nshow how Jython and Clojure can be used together.\n\nNo previous knowledge of Clojure (or Lisp) is assumed nor required.\n\n", "video_mp4_url": null, "tags": ["java", "jvm", "jython", "memory"], "copyright_text": "Standard YouTube License", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=jYhLqo4Mqbc", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "[EuroPython 2011] Enrico Franchi - 21 June 2011 in \"Track Lasagne\"\n\n", "thumbnail_url": "http://i.ytimg.com/vi/jYhLqo4Mqbc/hqdefault.jpg", "video_flv_url": null}