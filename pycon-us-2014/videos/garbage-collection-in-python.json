{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "PyCon US 2014", "speakers": ["Benjamin Peterson"], "title": "Garbage Collection in Python", "quality_notes": "", "video_flv_length": null, "recorded": "2014-04-13", "video_mp4_length": null, "description": "", "video_mp4_url": null, "tags": [], "copyright_text": "http://www.youtube.com/t/terms", "related_urls": [], "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=iHVs_HkjdmI", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "This talk will explore how garbage collection is implemented in CPython and PyPy. See how CPython deals reference counting's shortcomings with a special GC for cycle collection. Then dive into PyPy's sophisticated and high-performing GC implementations. The particularly thorny issue of finalizers in reference cycles will also be addressed.", "thumbnail_url": "http://i1.ytimg.com/vi/iHVs_HkjdmI/hqdefault.jpg", "video_flv_url": null}