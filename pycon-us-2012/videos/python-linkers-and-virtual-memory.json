{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "PyCon US 2012", "speakers": ["Brandon Rhodes"], "title": "Python, Linkers, and Virtual Memory", "quality_notes": "", "video_flv_length": null, "recorded": "2012-03-11", "video_mp4_length": null, "description": "", "video_mp4_url": null, "tags": [], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=twQKAoq2OPE", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "Why does \u201ctop\u201d show that your Python process uses 110\u00a0MB of virtual memory but\nhas a resident set size of 9\u00a0MB? Does it consume more memory to spawn several\ninterpreters, or to run one Python and have it fork() further workers? What is\nan \u201cundefined symbol,\u201d anyway? Learn about how an operating system manages\nmemory, loads shared libraries, and what this means for Python servers and\napplications.\n\n", "thumbnail_url": "http://img.youtube.com/vi/twQKAoq2OPE/hqdefault.jpg", "video_flv_url": null}