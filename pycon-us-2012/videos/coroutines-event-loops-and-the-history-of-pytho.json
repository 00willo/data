{"whiteboard": "", "video_mp4_download_only": false, "video_webm_download_only": false, "duration": null, "video_ogv_download_only": false, "category": "PyCon US 2012", "speakers": ["David Mertz"], "title": "Coroutines, event loops, and the history of Python generators", "quality_notes": "", "video_flv_length": null, "recorded": "2012-03-10", "video_mp4_length": null, "description": "", "video_mp4_url": null, "tags": [], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=b7R3-_ViNxk", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "This talk traces lightweight concurrency from Python 2.2's generators, which\nenabled semi-coroutines as a mechanism for scheduling \"weightless\" threads; to\nPEP 342, which created true coroutines, and hence made event-driven\nprogramming easier; to 3rd party libraries built around coroutines, from older\nGTasklet and peak.events to the current Greenlet/gevent and Twisted Reactor.\n\n", "thumbnail_url": "http://img.youtube.com/vi/b7R3-_ViNxk/hqdefault.jpg", "video_flv_url": null}