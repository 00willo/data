{
  "description": "<p>Shipping Python libraries is easy! ...until you want to use a C library. How do you easily and reliably deliver software to users when they may not have the libraries you depend on, or even a compiler? How do you handle the significant differences between linux, OS X, Windows, FreeBSD, and other platforms Python runs on?</p>\n<p>We'll walk through:</p>\n<ul>\n<li>The requirements for building C modules in Python.</li>\n<li>Why those requirements contribute to bad UX and create barriers to adoption.</li>\n<li>How wheels can be used to surmount many of these challenges.</li>\n<li>What kind of infrastructure is required to build these wheels.</li>\n<li>The advantages and potential disadvantages of binary distribution.</li>\n</ul>",
  "duration": 2280,
  "recorded": "2016-10-07",
  "speakers": [
    "Paul Kehrer"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/MfDbMC5ktwE/hqdefault.jpg",
  "title": "Reliably Distributing Binary Modules",
  "videos": [
    {
      "type": "youtube",
      "url": "http://youtu.be/MfDbMC5ktwE"
    }
  ]
}