{"whiteboard": "", "video_mp4_download_only": true, "video_webm_download_only": false, "duration": 60, "video_ogv_download_only": false, "category": "PyCon DE 2013", "speakers": ["Andi Albrecht"], "title": "-getrieben. Wer treibt eigentlich die Test-Entwicklung?", "quality_notes": "", "video_flv_length": null, "recorded": "2013-10-15", "video_mp4_length": null, "description": "", "video_mp4_url": "", "tags": ["testing"], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=QO_HCDRZEbo", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "German", "video_webm_length": null, "summary": "In den letzten Jahren machen auch in der Python-Welt immer mehr \u201cgetriebene\u201d Entwicklungsmethoden die Runde, so zum Beispiel Test Driven Development, Behavior Driven Development oder Feature Driven Development. Kaum ist davon die Rede, kommen noch weitere Schlagworte aus dem Bereich des Testens, wie Acceptance Test, Unit Test, Functional Test oder Integration Test, dazu und die Verwirrung ist oftmals perfekt. Verliert man in diesem Dschungel an Begriffen den \u00dcberblick, ist die Gefahr gegeben, dass man das Testen entweder ganz l\u00e4sst oder keine der Methoden richtig anzuwenden.\r\n\r\nDer Vortrag gibt eine Ordnung f\u00fcr diese Begriffe und versucht dadurch etwas mehr Licht ins Dickicht zu bringen. Dabei steht weniger die lehrbuchartige Klassifizierung der Methoden im Vordergrund, sondern es wird die Fragestellung verfolgt, wer eigentlich die Zielgruppe eines Tests ist. Das k\u00f6nnen neben Entwicklern auch Qualit\u00e4tssicherer, Projektleiter und -Mitglieder, aber auch letztlich Kunden eines Produktes sein. Wer \u201cliest\u201d also die Testergebnisse und in welcher Form sollten die Ergebnisse vorliegen, damit sie nutzbar sind. Zusammen mit einer Betrachtung der unterschiedlichen Test-Gegenst\u00e4nde wird die Wahl der Test-Methode und die Implementierung der Tests klarer.\r\n\r\nZu den vorgestellten Methoden werden beispielhaft Python-Test-Frameworks wie zum Beispiel Selenium, das Robot-Framework und klassische UnitTest-Frameworks vorgestellt. Anhand von kurzen Code-Beispielen wird der Einsatz dieser Werkzeuge f\u00fcr bestimmte Methodiken verdeutlicht und es wird gezeigt, wie auf Basis der Testergebnisse Berichte und Metriken f\u00fcr die jeweiligen Zielgruppen generiert werden k\u00f6nnen.\r\n", "thumbnail_url": "http://i1.ytimg.com/vi/QO_HCDRZEbo/hqdefault.jpg", "video_flv_url": null}