{"whiteboard": "", "video_mp4_download_only": true, "video_webm_download_only": false, "duration": 30, "video_ogv_download_only": false, "category": "PyCon DE 2013", "speakers": ["Dr. Jan Morlock"], "title": "MapReduce mit Disco", "quality_notes": "", "video_flv_length": null, "recorded": "2013-10-17", "video_mp4_length": null, "description": "", "video_mp4_url": "", "tags": ["big data", "disco", "mapreduce", "parallelisierung"], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=XOhRwhBnkf8", "video_webm_url": "", "video_ogv_length": null, "video_ogv_url": "", "language": "German", "video_webm_length": null, "summary": "Mit dem MapReduce-Verfahren k\u00f6nnen massive Datenmengen auf einem Rechencluster verarbeitet werden. Namensgeber und wichtige Bestandteile sind eine Map- und eine Reduce-Phase. Diese werden jeweils parallelisiert ausgef\u00fchrt und erm\u00f6glichen somit eine optimale Auslastung der vorhandenen Ressourcen. Im Vergleich zu einer entsprechenden sequentiellen Implementierung k\u00f6nnen dadurch gro\u00dfe Zeiteinsparungen erreicht werden. \r\n\r\nMit dem freien Disco-Framework k\u00f6nnen MapReduce-Aufgaben leicht in Python erstellt werden. Beim Zugriff auf die Eingabedaten werden verschiedene Protokolle unterst\u00fctzt. W\u00e4hrend der Ausf\u00fchrung kann der Zustand des Rechenclusters sowie der Fortschritt der einzelnen Aufgaben mit Hilfe einer Weboberfl\u00e4che \u00fcberwacht werden. Ein verteiltes Dateisystem, das Disco Distributed Filesystem (DDFS), wird zur Speicherung der Zwischen- und Endergebnisse verwendet.", "thumbnail_url": "http://i1.ytimg.com/vi/XOhRwhBnkf8/hqdefault.jpg", "video_flv_url": ""}