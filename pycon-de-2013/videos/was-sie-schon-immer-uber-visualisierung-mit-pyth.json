{"whiteboard": "", "video_mp4_download_only": true, "video_webm_download_only": false, "duration": 30, "video_ogv_download_only": false, "category": "PyCon DE 2013", "speakers": ["Josef Heinen"], "title": "Was Sie schon immer \u00fcber \u201eVisualisierung mit Python\u201c wissen wollten", "quality_notes": "", "video_flv_length": null, "recorded": "2013-10-17", "video_mp4_length": null, "description": "", "video_mp4_url": "", "tags": ["accelerate", "anaconda", "numba", "numpy", "opengl", "pyqt", "python", "visualisierung"], "copyright_text": "", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=muvvgXc8Xlw", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "German", "video_webm_length": null, "summary": "Schon lange hat sich Python in den Software-Entwicklungsabteilungen von Forschung und Industrie etabliert, nicht zuletzt wegen der Verbreitung von Bibliotheken wie SciPy oder Matplotlib. Bei der Verarbeitung gro\u00dfer Datenmengen oder im Zusammenspiel mit GUI-Toolkits st\u00f6\u00dft man aber leicht an die Grenzen der interpretativen Programmierung.\r\n\r\nDer Vortrag zeigt auf, wie solche Anforderung auf der Basis des *GR Frameworks*, einer \"Lightweight\"-Alternative zu Matplotlib, umgesetzt werden k\u00f6nnen. Im Einzelnen wird beschrieben wie man mit aktuellen Software-Technologien Echtzeit-Anwendungen oder rechenintensive Simulationen in Python realisieren kann. So l\u00e4sst sich zum Beispiel durch die Verwendung von Just-In-Time Kompilierung mit Numba(Pro) eine enorme Performance-Steigerung erzielen. An konkreten Beispielen werden die Vorz\u00fcge des *GR Frameworks* im Zusammenspiel mit JIT-Compilern, graphischen Benutzeroberfl\u00e4chen (GUIs) sowie OpenGL, aber auch vor dem Hintergrund einer stetig ansteigenden Paketflut beschrieben.", "thumbnail_url": "http://i1.ytimg.com/vi/muvvgXc8Xlw/hqdefault.jpg", "video_flv_url": null}