{
  "copyright_text": "Creative Commons Attribution license (reuse allowed)",
  "description": "This tutorial is for Python users who would like to create nice 2d plots with Python.\n\n# Audience Level\n\nStudents should have a working knowledge of Python. NumPy knowledge is helpful but not required.\n\n# Prerequisites\n\nPlease bring your laptop with the operating system of your choice (Linux, Mac OS X, Windows). In addition to Python 3.6 (2.7 works if really want to use it), we need:\n\n* a current versions of matplotlib (http://matplotlib.sourceforge.net)\n* Jupyter (http://jupyter.org/) and \n* NumPy (http://numpy.scipy.org).\n\nIf you use Anaconda you should have all requirements installed. If you use a new `conda` environment install with:\n\n`conda install jupyter numpy matplotlib`\n\nThe same goes for `pip`:\n\n`pip install jupyter numpy matplotlib`\n\n\n## Method\n\nThis is a hands-on course. Students are strongly encouraged to work along with the trainer at the interactive prompt. There will be exercises the students need to do on their own. Experience shows that this active involvement is essential for an effective learning.\n\n## Content\n\nThe library matplotlib provides many different types of diagrams from within Python with only few lines of code. Examples are used to exercise the use of this library. The tutorial provides an overview how to create plots . Using matplotlib from Jupyter Notebook provides an interactive environment for fast testing of ideas. We will be using this for most of the tutorial.\nWith a simple plot we learn how to add axis labels, titles and a legend. The GUI offers zooming, panning, changing of plot sizes and other interactive ways to modify the plot. We will use Python to change properties of existing plots such as line colors, marker symbols, or line styles. There are several ways how to place text on plots. You will learn about the different coordinate systems relative to the plot, the canvas or the figure. Another topic are ticks, where to put them and how to format them to achieve publication-quality plots. The concepts of figures, subplots, and axes and how they relate to each other will be explained with examples. \nMatplotlib offers many different types of plots. The tutorial introduces several of them with an example. A more advanced topic will be creating your own plot types. Finally, we will create a small animation to explore the possibilities to visualize changes. \n\n## Outline\n\n* Introduction\n* Jupyter\n* Simple plots\n* Properties\n* Text\n* Ticks\n* Figures, subplots, and axes\n* Other types of plots\n* The class library\n* Creating New Plot Types\n* Animations\n\n### Audience level:  Novice",
  "duration": 5252,
  "language": "eng",
  "recorded": "2017-08-31",
  "related_urls": [
    {
      "label": "schedule",
      "url": "https://www.euroscipy.org/2017/program.html"
    }
  ],
  "speakers": [
    "Mike M\u00fcller"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/YrnHdgZ8n1U/maxresdefault.jpg",
  "title": "Matplotlib",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=YrnHdgZ8n1U"
    }
  ]
}
