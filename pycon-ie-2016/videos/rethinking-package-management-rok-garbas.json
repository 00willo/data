{
  "description": "| Packaging is a hard problem. Still every language/distribution tries\n  to invent packaging on their own. This leaves us (developers /\n  sysadmins) with a big number of tools that we need to master in order\n  to do our job. We will look at how Nix[1] and NixOS[2] can be used in\n  today's software development processes and which are the benefits and\n  drawbacks you might face. In this talk we will look into how Nix can\n  be used to solve some problems we face when developing with python and\n  how it might just be the right tool for your next project.\n| [1] Nix is a powerful package manager for Linux and other Unix systems\n  that makes package management reliable and reproducible. It provides\n  atomic upgrades and rollbacks, side-by-side installation of multiple\n  versions of a package, multi-user package management and easy setup of\n  build environments.\n| [2] NixOS is a Linux distribution built on top of the Nix package\n  manager, it is completely declarative, makes upgrading systems\n  reliable, and has many other advantages.\n",
  "duration": 1837,
  "recorded": "2016-11-06",
  "speakers": [
    "Rok Garbas"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/4sXDgZl2GPk/hqdefault.jpg",
  "title": "Rethinking package management",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=4sXDgZl2GPk"
    }
  ]
}
