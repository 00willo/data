{"whiteboard": "", "video_mp4_download_only": true, "video_webm_download_only": false, "duration": 30, "video_ogv_download_only": false, "category": "PyCon AU 2013", "speakers": ["Ryan Kelly"], "title": "Testing for Graceful Failure with Vaurien and Marteau", "quality_notes": "", "video_flv_length": null, "recorded": "2013-07-06", "video_mp4_length": null, "description": "", "video_mp4_url": "http://s3.us.archive.org/ndvpyconau2013/Testing_for_Graceful_Failure_w.mp4", "tags": [], "copyright_text": "CC-BY-SA", "related_urls": [], "video_flv_download_only": false, "source_url": "https://www.youtube.com/watch?v=DH94wksQFPM", "video_webm_url": null, "video_ogv_length": null, "video_ogv_url": null, "language": "English", "video_webm_length": null, "summary": "So you've built an awesome webapp, put it through its paces, and assured yourself that it does what it's supposed to do.  Great!  Now how does it behave when things start to go wrong?\r\n\r\nThis talk will demonstrate how the Mozilla Services team tests for failure scenarios in our web services, focusing on two key python-based tools:  Marteau, a web-based frontend for easily running load-tests and analyzing the results, and Vaurien, a misbehaving TCP proxy that can simulate a variety of backend failure modes.\r\n\r\nUsed together, these tools can help ensure that a web service will not only scale up to meet its expected demand, but will fail gracefully when it finally reaches breaking point.\r\n", "thumbnail_url": "http://i1.ytimg.com/vi/DH94wksQFPM/hqdefault.jpg", "video_flv_url": null}